// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Relacionamentos.Data;

#nullable disable

namespace Relacionamentos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CasaModelMoradorModel", b =>
                {
                    b.Property<int>("CasasId")
                        .HasColumnType("int");

                    b.Property<int>("MoradoresId")
                        .HasColumnType("int");

                    b.HasKey("CasasId", "MoradoresId");

                    b.HasIndex("MoradoresId");

                    b.ToTable("CasaModelMoradorModel");
                });

            modelBuilder.Entity("Relacionamentos.Models.CasaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Casas");
                });

            modelBuilder.Entity("Relacionamentos.Models.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasaId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasaId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Relacionamentos.Models.MoradorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Moradores");
                });

            modelBuilder.Entity("Relacionamentos.Models.QuartoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CasaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasaId");

                    b.ToTable("Quarto");
                });

            modelBuilder.Entity("CasaModelMoradorModel", b =>
                {
                    b.HasOne("Relacionamentos.Models.CasaModel", null)
                        .WithMany()
                        .HasForeignKey("CasasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Relacionamentos.Models.MoradorModel", null)
                        .WithMany()
                        .HasForeignKey("MoradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Relacionamentos.Models.EnderecoModel", b =>
                {
                    b.HasOne("Relacionamentos.Models.CasaModel", "Casa")
                        .WithOne("Endereco")
                        .HasForeignKey("Relacionamentos.Models.EnderecoModel", "CasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casa");
                });

            modelBuilder.Entity("Relacionamentos.Models.QuartoModel", b =>
                {
                    b.HasOne("Relacionamentos.Models.CasaModel", "Casa")
                        .WithMany("Quartos")
                        .HasForeignKey("CasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Casa");
                });

            modelBuilder.Entity("Relacionamentos.Models.CasaModel", b =>
                {
                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Quartos");
                });
#pragma warning restore 612, 618
        }
    }
}
